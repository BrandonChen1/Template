<!DOCTYPE html>
<html lang="en">

<link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Oswald" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">

<style>
    html,body {
        width: 100%;
        height: 100%;
        margin: 0px;
        padding: 0px;
        overflow-x: hidden;
    }
    #player{
        border: solid 1px;
    }
    #progressbar{
        float: left;
        margin-left: 10px;
        position: relative;
    }
    #line{
        width: 550px;
        height: 4px;
        background-color: black;
        margin-top: 15px;
        position: absolute;
    }
    #square {
        border: solid 1px;
        width: 12px;
        height: 12px;
        position: relative;
        bottom: 4px;
    }
</style>

<head>
    <meta charset="UTF-8">
    <meta name = "viewport" content="width = device-width">
    <title>Brandon Chen | Website </title>
    <link rel= "icon" href = "BC-Logo.png">
</head>
<body>
    <div class = "Main-Container">

        <!-- Navigation Bar -->
        <section id = "navigation">

            <div class = "nav-container" style = "min-height: 55px;">
                <a id = "top"></a>

                <nav class = "navbar navbar-default">
                    <div class = "container">

                        <a href = "#" class = "navbar-brand"> Brandon Chen </a>

                        <!-- Used for when the screen resolution is too small -->
                        <button class = "navbar-toggle" data-toggle = "collapse" data-target = ".navHeaderCollapse">
                            <i class = "fa fa-bars fa-1x bars"></i>
                        </button>

                        <div class = "collapse navbar-collapse navHeaderCollapse">
                            <ul class = "nav navbar-nav navbar-right">
                                <li> <a href = "#"> Button 1</a></li>
                                <li> <a href = "#"> Button 2</a></li>
                                <li> <a href = "#"> Button 3</a></li>
                            </ul>
                        </div>
                    </div>
                </nav>
            </div>

        </section>


        <section class = "container" id = "content">
            <h1> Brandon Chen </h1>
            <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
            <div id="player"></div>
            <div id ="controls">
                <div class = "btn-group" style = "float:left;">
                    <button id = "play" type="button" class="btn btn-default play">
                        <span class="glyphicon glyphicon-play"></span>
                    </button>
                </div>
                <div id = "pause" class = "btn-group" style = "float:left;">
                    <button type="button" class="btn btn-default pause">
                    <span class="glyphicon glyphicon-pause"></span>
                    </button>
                </div>
                <div id = "progressbar">
                    <div id = "line">
                        <div id = "square"></div>
                    </div>
                </div>
            </div>


            <section id = "sockets">
                <script src="/socket.io/socket.io.js"></script>
                <script>
                    var socket = io();
                    var playButton = $('#play');
                    var pauseButton = $('#pause');
                    var progressSquare = $('#square');
                    playButton.click(function(){
                       socket.emit('playEvent', 'play');
                    });
                    pauseButton.click(function(){
                        socket.emit('pauseEvent', 'pause');
                    });
                    socket.on('playEvent', function(){
                       player.playVideo();
                    });
                    socket.on('pauseEvent', function(){
                        player.pauseVideo();
                    });
                    socket.on('skipAround', function(data){
                        var bar = data / player.getDuration() * 100;
                        progressSquare.css("left",  bar.toString() + "%");
                        player.seekTo(data, true);
                    });
                </script>
            </section>

            <!-- Javascript -->
            <script>
                function progressLoop(){
                    var progressBar = $('#progressbar');
                    var line = $('#line');
                    var progressSquare = $('#square');
                    line.click(function(event){
                        console.log($(this).offset().left);
                        var seconds = (event.clientX - $(this).offset().left)/550 * player.getDuration();
                        socket.emit('skipAround', seconds);
                    });
                    setInterval(function(){
                        if (player == null || progressBar == null){
                            return;
                        }
                        var fraction = (player.getCurrentTime() / player.getDuration() * 100 );
                        progressSquare.css("left",  fraction.toString() + "%");
                    }, 200)
                }

            </script>
            <script>
                // 2. This code loads the IFrame Player API code asynchronously.
                var tag = document.createElement('script');

                tag.src = "https://www.youtube.com/iframe_api";
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                // 3. This function creates an <iframe> (and YouTube player)
                //    after the API code downloads.
                var player;
                function onYouTubeIframeAPIReady() {
                    player = new YT.Player('player', {
                        height: '390',
                        width: '640',
                        videoId: 'gnkItf3Nhc4',
                        events: {
                            'onReady': onPlayerReady,
                            'onStateChange': onPlayerStateChange
                        },
                        playerVars: {disablekb: 1, oontrols: 0}
                    });
                }

                // 4. The API will call this function when the video player is ready.
                function onPlayerReady(event) {
                    event.target.playVideo();
                    progressLoop();
                }

                // 5. The API calls this function when the player's state changes.
                //    The function indicates that when playing a video (state=1),
                //    the player should play for six seconds and then stop.
                var done = false;
                function onPlayerStateChange(event) {
                    if (event.data == YT.PlayerState.PLAYING && !done) {
                        done = true;
                    }
                }
                function stopVideo() {
                    player.stopVideo();
                }
            </script>
        </section>

    </div>
</body>


</html>
